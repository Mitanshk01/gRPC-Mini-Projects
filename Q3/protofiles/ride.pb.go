// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: protofiles/ride.proto

package protofiles

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Rider requests a ride (no change)
type RideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RiderId        string `protobuf:"bytes,1,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	PickupLocation string `protobuf:"bytes,2,opt,name=pickup_location,json=pickupLocation,proto3" json:"pickup_location,omitempty"`
	Destination    string `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *RideRequest) Reset() {
	*x = RideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideRequest) ProtoMessage() {}

func (x *RideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideRequest.ProtoReflect.Descriptor instead.
func (*RideRequest) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{0}
}

func (x *RideRequest) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

func (x *RideRequest) GetPickupLocation() string {
	if x != nil {
		return x.PickupLocation
	}
	return ""
}

func (x *RideRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

// Driver receives ride assignment (updated)
type AssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId string `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
}

func (x *AssignmentRequest) Reset() {
	*x = AssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentRequest) ProtoMessage() {}

func (x *AssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentRequest.ProtoReflect.Descriptor instead.
func (*AssignmentRequest) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{1}
}

func (x *AssignmentRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

// Ride response after rider request (no change)
type RideResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RideId   string `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	DriverId string `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Status   string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"` // e.g., "Assigned", "Pending", etc.
}

func (x *RideResponse) Reset() {
	*x = RideResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideResponse) ProtoMessage() {}

func (x *RideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideResponse.ProtoReflect.Descriptor instead.
func (*RideResponse) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{2}
}

func (x *RideResponse) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

func (x *RideResponse) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *RideResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Status-related messages (no change)
type RideStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RideId string `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
}

func (x *RideStatusRequest) Reset() {
	*x = RideStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RideStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideStatusRequest) ProtoMessage() {}

func (x *RideStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideStatusRequest.ProtoReflect.Descriptor instead.
func (*RideStatusRequest) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{3}
}

func (x *RideStatusRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

type RideStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RideId string `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RideStatusResponse) Reset() {
	*x = RideStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RideStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideStatusResponse) ProtoMessage() {}

func (x *RideStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideStatusResponse.ProtoReflect.Descriptor instead.
func (*RideStatusResponse) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{4}
}

func (x *RideStatusResponse) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

func (x *RideStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Accept/reject ride (no change)
type AcceptRideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId string `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	RideId   string `protobuf:"bytes,2,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
}

func (x *AcceptRideRequest) Reset() {
	*x = AcceptRideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptRideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptRideRequest) ProtoMessage() {}

func (x *AcceptRideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptRideRequest.ProtoReflect.Descriptor instead.
func (*AcceptRideRequest) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{5}
}

func (x *AcceptRideRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *AcceptRideRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

type AcceptRideResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // e.g., "Accepted", "Reassigned"
}

func (x *AcceptRideResponse) Reset() {
	*x = AcceptRideResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptRideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptRideResponse) ProtoMessage() {}

func (x *AcceptRideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptRideResponse.ProtoReflect.Descriptor instead.
func (*AcceptRideResponse) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{6}
}

func (x *AcceptRideResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type RejectRideRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId string `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	RideId   string `protobuf:"bytes,2,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
}

func (x *RejectRideRequest) Reset() {
	*x = RejectRideRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectRideRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectRideRequest) ProtoMessage() {}

func (x *RejectRideRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectRideRequest.ProtoReflect.Descriptor instead.
func (*RejectRideRequest) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{7}
}

func (x *RejectRideRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *RejectRideRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

type RejectRideResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // e.g., "Rejected", "Reassigned"
}

func (x *RejectRideResponse) Reset() {
	*x = RejectRideResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectRideResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectRideResponse) ProtoMessage() {}

func (x *RejectRideResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectRideResponse.ProtoReflect.Descriptor instead.
func (*RejectRideResponse) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{8}
}

func (x *RejectRideResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Ride completion (no change)
type RideCompletionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RideId   string `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	DriverId string `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
}

func (x *RideCompletionRequest) Reset() {
	*x = RideCompletionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RideCompletionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideCompletionRequest) ProtoMessage() {}

func (x *RideCompletionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideCompletionRequest.ProtoReflect.Descriptor instead.
func (*RideCompletionRequest) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{9}
}

func (x *RideCompletionRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

func (x *RideCompletionRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type RideCompletionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // e.g., "Completed"
}

func (x *RideCompletionResponse) Reset() {
	*x = RideCompletionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RideCompletionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RideCompletionResponse) ProtoMessage() {}

func (x *RideCompletionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RideCompletionResponse.ProtoReflect.Descriptor instead.
func (*RideCompletionResponse) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{10}
}

func (x *RideCompletionResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Status checks for rider and driver (no change)
type GetRiderStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RiderId string `protobuf:"bytes,1,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
}

func (x *GetRiderStatusRequest) Reset() {
	*x = GetRiderStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRiderStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRiderStatusRequest) ProtoMessage() {}

func (x *GetRiderStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRiderStatusRequest.ProtoReflect.Descriptor instead.
func (*GetRiderStatusRequest) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{11}
}

func (x *GetRiderStatusRequest) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

type GetRiderStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RiderId string `protobuf:"bytes,1,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	Status  string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // e.g., "Awaiting Ride", "In Ride", etc.
}

func (x *GetRiderStatusResponse) Reset() {
	*x = GetRiderStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRiderStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRiderStatusResponse) ProtoMessage() {}

func (x *GetRiderStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRiderStatusResponse.ProtoReflect.Descriptor instead.
func (*GetRiderStatusResponse) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{12}
}

func (x *GetRiderStatusResponse) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

func (x *GetRiderStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetDriverStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId string `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
}

func (x *GetDriverStatusRequest) Reset() {
	*x = GetDriverStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDriverStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDriverStatusRequest) ProtoMessage() {}

func (x *GetDriverStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDriverStatusRequest.ProtoReflect.Descriptor instead.
func (*GetDriverStatusRequest) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{13}
}

func (x *GetDriverStatusRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type GetDriverStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId string `protobuf:"bytes,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Status   string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // e.g., "Available", "Assigned", "In Ride"
}

func (x *GetDriverStatusResponse) Reset() {
	*x = GetDriverStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDriverStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDriverStatusResponse) ProtoMessage() {}

func (x *GetDriverStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDriverStatusResponse.ProtoReflect.Descriptor instead.
func (*GetDriverStatusResponse) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{14}
}

func (x *GetDriverStatusResponse) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *GetDriverStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Ride status updates (no change)
type UpdateRideStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RideId string `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"` // ID of the ride
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`               // New status (e.g., "In Progress", "Cancelled")
}

func (x *UpdateRideStatusRequest) Reset() {
	*x = UpdateRideStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRideStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRideStatusRequest) ProtoMessage() {}

func (x *UpdateRideStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRideStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateRideStatusRequest) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateRideStatusRequest) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

func (x *UpdateRideStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateRideStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RideId string `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"` // ID of the ride
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`               // Updated status
}

func (x *UpdateRideStatusResponse) Reset() {
	*x = UpdateRideStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRideStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRideStatusResponse) ProtoMessage() {}

func (x *UpdateRideStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRideStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateRideStatusResponse) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateRideStatusResponse) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

func (x *UpdateRideStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AssignmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RideId         string `protobuf:"bytes,1,opt,name=ride_id,json=rideId,proto3" json:"ride_id,omitempty"`
	RiderId        string `protobuf:"bytes,2,opt,name=rider_id,json=riderId,proto3" json:"rider_id,omitempty"`
	PickupLocation string `protobuf:"bytes,3,opt,name=pickup_location,json=pickupLocation,proto3" json:"pickup_location,omitempty"`
	Destination    string `protobuf:"bytes,4,opt,name=destination,proto3" json:"destination,omitempty"`
	Status         string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"` // e.g., "NewRide", "Reassigned"
}

func (x *AssignmentResponse) Reset() {
	*x = AssignmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protofiles_ride_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentResponse) ProtoMessage() {}

func (x *AssignmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protofiles_ride_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentResponse.ProtoReflect.Descriptor instead.
func (*AssignmentResponse) Descriptor() ([]byte, []int) {
	return file_protofiles_ride_proto_rawDescGZIP(), []int{17}
}

func (x *AssignmentResponse) GetRideId() string {
	if x != nil {
		return x.RideId
	}
	return ""
}

func (x *AssignmentResponse) GetRiderId() string {
	if x != nil {
		return x.RiderId
	}
	return ""
}

func (x *AssignmentResponse) GetPickupLocation() string {
	if x != nil {
		return x.PickupLocation
	}
	return ""
}

func (x *AssignmentResponse) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *AssignmentResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_protofiles_ride_proto protoreflect.FileDescriptor

var file_protofiles_ride_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x72, 0x69, 0x64,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x73, 0x0a, 0x0b, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x30, 0x0a, 0x11, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x0c,
	0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x69, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2c, 0x0a, 0x11, 0x52, 0x69,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x12, 0x52, 0x69, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x49, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x12, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x49, 0x0a, 0x11, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64,
	0x65, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x12, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x69, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x4d, 0x0a, 0x15, 0x52, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x30, 0x0a, 0x16, 0x52, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x32, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x69, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x35, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4a, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4b, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x69,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x69, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x32, 0x85, 0x02, 0x0a, 0x0c, 0x52, 0x69, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x69, 0x64,
	0x65, 0x12, 0x19, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72,
	0x69, 0x64, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x69, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52,
	0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x2e, 0x72, 0x69, 0x64, 0x65,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x69, 0x64,
	0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x52, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23,
	0x2e, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x69, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xa6, 0x04, 0x0a, 0x0d, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x69, 0x64, 0x65, 0x12, 0x1f, 0x2e, 0x72, 0x69, 0x64, 0x65,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52,
	0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x69, 0x64,
	0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x69, 0x64, 0x65, 0x12, 0x1f, 0x2e, 0x72, 0x69, 0x64,
	0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x69,
	0x64, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x69, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x12, 0x23, 0x2e,
	0x72, 0x69, 0x64, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x69, 0x64,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x52, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x2e, 0x72, 0x69,
	0x64, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52,
	0x69, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x72, 0x69, 0x64,
	0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x69,
	0x64, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12,
	0x61, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x25, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x72, 0x69, 0x64,
	0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x69, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x4d, 0x69, 0x74, 0x61, 0x6e, 0x73, 0x68, 0x6b, 0x30, 0x31, 0x2f, 0x44, 0x53, 0x5f, 0x48,
	0x57, 0x34, 0x2f, 0x51, 0x33, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protofiles_ride_proto_rawDescOnce sync.Once
	file_protofiles_ride_proto_rawDescData = file_protofiles_ride_proto_rawDesc
)

func file_protofiles_ride_proto_rawDescGZIP() []byte {
	file_protofiles_ride_proto_rawDescOnce.Do(func() {
		file_protofiles_ride_proto_rawDescData = protoimpl.X.CompressGZIP(file_protofiles_ride_proto_rawDescData)
	})
	return file_protofiles_ride_proto_rawDescData
}

var file_protofiles_ride_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_protofiles_ride_proto_goTypes = []any{
	(*RideRequest)(nil),              // 0: ride_sharing.RideRequest
	(*AssignmentRequest)(nil),        // 1: ride_sharing.AssignmentRequest
	(*RideResponse)(nil),             // 2: ride_sharing.RideResponse
	(*RideStatusRequest)(nil),        // 3: ride_sharing.RideStatusRequest
	(*RideStatusResponse)(nil),       // 4: ride_sharing.RideStatusResponse
	(*AcceptRideRequest)(nil),        // 5: ride_sharing.AcceptRideRequest
	(*AcceptRideResponse)(nil),       // 6: ride_sharing.AcceptRideResponse
	(*RejectRideRequest)(nil),        // 7: ride_sharing.RejectRideRequest
	(*RejectRideResponse)(nil),       // 8: ride_sharing.RejectRideResponse
	(*RideCompletionRequest)(nil),    // 9: ride_sharing.RideCompletionRequest
	(*RideCompletionResponse)(nil),   // 10: ride_sharing.RideCompletionResponse
	(*GetRiderStatusRequest)(nil),    // 11: ride_sharing.GetRiderStatusRequest
	(*GetRiderStatusResponse)(nil),   // 12: ride_sharing.GetRiderStatusResponse
	(*GetDriverStatusRequest)(nil),   // 13: ride_sharing.GetDriverStatusRequest
	(*GetDriverStatusResponse)(nil),  // 14: ride_sharing.GetDriverStatusResponse
	(*UpdateRideStatusRequest)(nil),  // 15: ride_sharing.UpdateRideStatusRequest
	(*UpdateRideStatusResponse)(nil), // 16: ride_sharing.UpdateRideStatusResponse
	(*AssignmentResponse)(nil),       // 17: ride_sharing.AssignmentResponse
}
var file_protofiles_ride_proto_depIdxs = []int32{
	0,  // 0: ride_sharing.RiderService.RequestRide:input_type -> ride_sharing.RideRequest
	3,  // 1: ride_sharing.RiderService.GetRideStatus:input_type -> ride_sharing.RideStatusRequest
	11, // 2: ride_sharing.RiderService.GetRiderStatus:input_type -> ride_sharing.GetRiderStatusRequest
	5,  // 3: ride_sharing.DriverService.AcceptRide:input_type -> ride_sharing.AcceptRideRequest
	7,  // 4: ride_sharing.DriverService.RejectRide:input_type -> ride_sharing.RejectRideRequest
	9,  // 5: ride_sharing.DriverService.CompleteRide:input_type -> ride_sharing.RideCompletionRequest
	13, // 6: ride_sharing.DriverService.GetDriverStatus:input_type -> ride_sharing.GetDriverStatusRequest
	1,  // 7: ride_sharing.DriverService.GetRideRequest:input_type -> ride_sharing.AssignmentRequest
	15, // 8: ride_sharing.DriverService.UpdateRideStatus:input_type -> ride_sharing.UpdateRideStatusRequest
	2,  // 9: ride_sharing.RiderService.RequestRide:output_type -> ride_sharing.RideResponse
	4,  // 10: ride_sharing.RiderService.GetRideStatus:output_type -> ride_sharing.RideStatusResponse
	12, // 11: ride_sharing.RiderService.GetRiderStatus:output_type -> ride_sharing.GetRiderStatusResponse
	6,  // 12: ride_sharing.DriverService.AcceptRide:output_type -> ride_sharing.AcceptRideResponse
	8,  // 13: ride_sharing.DriverService.RejectRide:output_type -> ride_sharing.RejectRideResponse
	10, // 14: ride_sharing.DriverService.CompleteRide:output_type -> ride_sharing.RideCompletionResponse
	14, // 15: ride_sharing.DriverService.GetDriverStatus:output_type -> ride_sharing.GetDriverStatusResponse
	17, // 16: ride_sharing.DriverService.GetRideRequest:output_type -> ride_sharing.AssignmentResponse
	16, // 17: ride_sharing.DriverService.UpdateRideStatus:output_type -> ride_sharing.UpdateRideStatusResponse
	9,  // [9:18] is the sub-list for method output_type
	0,  // [0:9] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_protofiles_ride_proto_init() }
func file_protofiles_ride_proto_init() {
	if File_protofiles_ride_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protofiles_ride_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_ride_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_ride_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RideResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_ride_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RideStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_ride_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RideStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_ride_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AcceptRideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_ride_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*AcceptRideResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_ride_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*RejectRideRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_ride_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*RejectRideResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_ride_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*RideCompletionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_ride_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*RideCompletionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_ride_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetRiderStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_ride_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetRiderStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_ride_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetDriverStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_ride_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetDriverStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_ride_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRideStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_ride_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRideStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protofiles_ride_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*AssignmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protofiles_ride_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_protofiles_ride_proto_goTypes,
		DependencyIndexes: file_protofiles_ride_proto_depIdxs,
		MessageInfos:      file_protofiles_ride_proto_msgTypes,
	}.Build()
	File_protofiles_ride_proto = out.File
	file_protofiles_ride_proto_rawDesc = nil
	file_protofiles_ride_proto_goTypes = nil
	file_protofiles_ride_proto_depIdxs = nil
}
